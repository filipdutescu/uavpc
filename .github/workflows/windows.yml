name: Windows

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: ".local"

jobs:
  build:

    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - uses: actions/checkout@v2

    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ env.HOME }}/${{ env.INSTALL_LOCATION }}
        key: ${{runner.os}}-dependencies

    - name: install Catch2
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      run: |
        cd ..
        git clone https://github.com/catchorg/catch2.git --branch v2.13.4
        cd catch2
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME/$env:INSTALL_LOCATION" -DCATCH_INSTALL_DOCS:BOOL=OFF -DCATCH_INSTALL_EXTRAS:BOOL=OFF -DCATCH_BUILD_TESTING=OFF
        cmake --build build --config Release
        cmake --build build --target install --config Release

    - name: install OpenCV
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      run: |
        cd ..
        git clone https://github.com/opencv/opencv.git --branch 4.5.0
        cd opencv
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME/$env:INSTALL_LOCATION" -DBUILD_LIST=videoio -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_opencv_apps:BOOL=OFF -DBUILD_FAT_JAVA_LIB:BOOL=OFF -DBUILD_JAVA:BOOL=OFF
        cmake --build build --config Release
        cmake --build build --target install --config Release

    - name: configure
      run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX="$HOME/$env:INSTALL_LOCATION" -Duavpc_ENABLE_DOXYGEN=0
      
    - name: build
      run: cmake --build build --config "$env:BUILD_TYPE" -j4

    - name: run tests
      run: |
        cd build
        ctest -C "$env:BUILD_TYPE" -VV

    - name: install project
      run: cmake --build build --target install --config Release 

